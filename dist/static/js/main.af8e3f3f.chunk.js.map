{"version":3,"sources":["layout/SignedInLinks.js","store/actions/authAction.js","layout/SignedOutLinks.js","layout/Navbar.js","dashboard/Notification.js","projects/ProjectSummary.js","projects/ProjectList.js","dashboard/Dashboard.js","projects/ProjectDetails.js","auth/SignIn.js","auth/SignUp.js","projects/CreateProject.js","store/actions/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","console","log","getState","_ref2","getFirebase","auth","then","type","props","initial","profile","react_default","a","createElement","className","NavLink","to","onClick","SignedOutLinks","state","firebase","Link","uid","layout_SignedInLinks","layout_SignedOutLinks","Notification","notifications","class","map","noti","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notification","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","_props$project","autherFirstName","Fragment","SignIn","email","password","handleSubmit","e","preventDefault","_this","signIn","handleChange","setState","Object","defineProperty","target","value","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","SignUp","firstName","lastName","signUp","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","err","CreateProject","createProject","history","push","fireStore","authorId","add","objectSpread","authorFirstName","authorLastName","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initialState","authError","authReducer","arguments","length","undefined","action","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af8e3f3f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signOut} from '../store/actions/authAction';\r\n\r\nconst SignedInLinks = props => {\r\n  const {initial} = props.profile;\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n        <li><a onClick={props.signOut} to=\"/\">Logout</a></li>\r\n        <li>\r\n          <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n            {initial}\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch (signOut ()),\r\n  };\r\n};\r\n\r\nexport default connect (null, mapDispatchToProps) (SignedInLinks);\r\n","export const signIn = credentials => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase ();\r\n    firebase\r\n      .auth ()\r\n      .signInWithEmailAndPassword (credentials.email, credentials.password)\r\n      .then (() => {\r\n        dispatch ({\r\n          type: 'LOGIN_SUCCESS',\r\n        });\r\n      })\r\n      .catch (e => {\r\n        dispatch ({\r\n          type: 'LOGIN_ERROR',\r\n          e,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  console.log ('action check..');\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase ();\r\n    firebase.auth ().signOut ().then (() => {\r\n      dispatch ({type: 'SIGN_OUT'});\r\n    });\r\n  };\r\n};\r\n\r\nexport const signUp = user => {\r\n  console.log (user);\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase ();\r\n    const firestore = getFirestore ();\r\n    firebase\r\n      .auth ()\r\n      .createUserWithEmailAndPassword (user.email, user.password)\r\n      .then (res => {\r\n        return firestore.collection ('users').doc (res.user.uid).set ({\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          initial: user.firstName[0] + user.lastName[0],\r\n        });\r\n      })\r\n      .then (() => {\r\n        dispatch ({type: 'SIGN_UP'});\r\n      })\r\n      .catch (err => {\r\n        dispatch ({type: 'SIGNUP_ERROR', err});\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to=\"/signin\">SignIn</NavLink></li>\r\n        <li><NavLink to=\"/signup\">Register</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Navbar = props => {\r\n  const {auth, profile} = props;\r\n  return (\r\n    <div>\r\n      <nav className=\"nav-wrapper grey darken-3\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"brand-logo\">My Plan</Link>\r\n          {auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />}\r\n\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  console.log (state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default connect (mapStateToProps) (Navbar);\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nconst Notification = props => {\r\n  const {notifications} = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul class=\"notifications\">\r\n            {notifications &&\r\n              notifications.map (noti => {\r\n                return (\r\n                  <li key={noti.id}>\r\n                    <span className=\"pink-text\">{noti.user}</span>\r\n                    <span>{noti.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment (noti.time.toDate ()).fromNow ()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>{project.content}</p>\r\n        <p className=\"grey-text\">\r\n          {moment (project.createdAt.toDate ()).calendar ()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list saction\">\r\n      {projects &&\r\n        projects.map (project => {\r\n          return (\r\n            <Link to={'/project/' + project.id} key={project.id}>\r\n              <ProjectSummary project={project} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, {Component} from 'react';\r\nimport Notification from './Notification';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  render () {\r\n    const {projects, auth, notifications} = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"container dashboard\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notification notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n  };\r\n};\r\n\r\nexport default compose (\r\n  connect (mapStateToProps),\r\n  firestoreConnect ([\r\n    {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n    {collection: 'notifications', limit: 4, orderBy: ['time', 'desc']},\r\n  ])\r\n) (Dashboard);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = props => {\r\n  const {project, auth} = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  if (project) {\r\n    const {content, autherFirstName, createdAt, title} = props.project;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container section project-details\">\r\n          <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n              <span className=\"card-title\">{title}</span>\r\n              <p>\r\n                {content}\r\n              </p>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n              <div>{autherFirstName}</div>\r\n              <div>{moment (createdAt.toDate ()).calendar ()}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return <div>Loading...</div>;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose (\r\n  connect (mapStateToProps),\r\n  firestoreConnect ([{collection: 'projects'}])\r\n) (ProjectDetails);\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {signIn} from '../store/actions/authAction';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state = {email: '', password: ''};\r\n  handleSubmit = e => {\r\n    e.preventDefault ();\r\n    console.log (this.state);\r\n    this.props.signIn (this.state);\r\n  };\r\n  handleChange = e => {\r\n    this.setState ({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render () {\r\n    const {auth} = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"Email\">Email:</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"Password\">Password:</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch (signIn (creds)),\r\n  };\r\n};\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps) (SignIn);\r\n","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signUp} from '../store/actions/authAction';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  };\r\n  handleChange = e => {\r\n    this.setState ({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault ();\r\n    this.props.signUp (this.state);\r\n  };\r\n  render () {\r\n    const {auth} = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name:</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name:</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"Email\">Email:</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"Password\">Password:</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: user => {\r\n      dispatch (signUp (user));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps) (SignUp);\r\n","import React, {Component} from 'react';\r\nimport {createProject} from './../store/actions/projectAction';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n  };\r\n  handleChange = e => {\r\n    this.setState ({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault ();\r\n    this.props.createProject (this.state);\r\n    this.setState ({\r\n      title: '',\r\n      content: '',\r\n    });\r\n    this.props.history.push ('/');\r\n  };\r\n\r\n  render () {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              onChange={this.handleChange}\r\n              value={this.state.title}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Content:</label>\r\n            <textarea\r\n              className=\"materialize-textarea\"\r\n              id=\"content\"\r\n              onChange={this.handleChange}\r\n              value={this.state.content}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch (createProject (project)),\r\n  };\r\n};\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps) (CreateProject);\r\n","export const createProject = project => {\r\n  return (dispatch, getState, {getFirestore, getFirebase}) => {\r\n    //make async call to database\r\n    const fireStore = getFirestore ();\r\n    const profile = getState ().firebase.profile;\r\n    const authorId = getState ().firebase.auth.uid;\r\n    fireStore\r\n      .collection ('projects')\r\n      .add ({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date (),\r\n      })\r\n      .then (() => {\r\n        dispatch ({\r\n          type: 'ADD_PROJECT',\r\n          project,\r\n        });\r\n      })\r\n      .catch (e => {\r\n        dispatch ({type: 'CREATE_PROJECT_ERROR', e});\r\n      });\r\n  };\r\n};\r\n","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Navbar from './layout/Navbar';\nimport Dashboard from './dashboard/Dashboard';\nimport ProjectDetails from './projects/ProjectDetails';\nimport SignIn from './auth/SignIn';\nimport SignUp from './auth/SignUp';\nimport CreateProject from './projects/CreateProject';\n\nclass App extends Component {\n  render () {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  authError: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        authError: 'logged in',\r\n      };\r\n    case 'LOGIN_ERROR':\r\n      console.log ('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login Failed',\r\n      };\r\n    case 'SIGN_OUT':\r\n      console.log ('sign out success');\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case 'SIGN_UP':\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case 'SIGNUP_ERROR':\r\n      return {\r\n        ...state,\r\n        authError: action.err,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initialState = {};\r\n\r\nconst projectReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_PROJECT':\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport {combineReducers} from 'redux';\r\nimport {firestoreReducer} from 'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers ({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n  apiKey: 'AIzaSyCFWhEqMm8UrSMiNg40zB54brA0tOiPixg',\r\n  authDomain: 'myplan-4aff7.firebaseapp.com',\r\n  databaseURL: 'https://myplan-4aff7.firebaseio.com',\r\n  projectId: 'myplan-4aff7',\r\n  storageBucket: 'myplan-4aff7.appspot.com',\r\n  messagingSenderId: '176009759651',\r\n};\r\nfirebase.initializeApp (config);\r\nfirebase.firestore ().settings ({timestampsInSnapshots: true});\r\n\r\nexport default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {reduxFirestore, getFirestore} from 'redux-firestore';\nimport {getFirebase, reactReduxFirebase} from 'react-redux-firebase';\nimport firebase from './config/fbConfig';\n\nconst store = createStore (\n  rootReducer,\n  compose (\n    applyMiddleware (thunk.withExtraArgument ({getFirestore, getFirebase})),\n    reduxFirestore (firebase),\n    reactReduxFirebase (firebase, {\n      useFirestoreForProfile: true,\n      userProfile: 'users',\n      attachAuthIsReady: true,\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then (() => {\n  ReactDOM.render (\n    <Provider store={store}><App /></Provider>,\n    document.getElementById ('root')\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister ();\n"],"sourceRoot":""}